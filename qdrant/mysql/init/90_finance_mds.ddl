-- =============================================================================
-- Finance Product DDL - MySQL Compatible Version
-- 转换自 Oracle DDL，适配 MySQL 8.0
-- 自动生成时间: $(date '+%Y-%m-%d %H:%M:%S')
-- =============================================================================

-- 设置 MySQL 会话参数
SET SESSION sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO';
SET SESSION foreign_key_checks = 0;

-- 使用 nl2sql 数据库
USE nl2sql;

-- ACTV_DATA definition


-- Drop table


DROP TABLE IF EXISTS ACTV_DATA;
CREATE TABLE ACTV_DATA (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	JOB_BATCH_TYPE_CDE VARCHAR(25),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CONSTRAINT ACT_DATA_UK1 UNIQUE (JOB_BATCH_TYPE_CDE),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,JOB_BATCH_TYPE_CDE)
);
CREATE INDEX INX_ON_AD_JOB_BATCH_EXEC_ID ON ACTV_DATA (JOB_BATCH_EXEC_ID);


-- BATCH_JOB definition


-- Drop table


DROP TABLE IF EXISTS BATCH_JOB;
CREATE TABLE BATCH_JOB (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	JOB_BATCH_START_DT_TM DATETIME,
	JOB_BATCH_END_DT_TM DATETIME,
	JOB_BATCH_TYPE_CDE VARCHAR(25),
	JOB_BATCH_STAT_CDE CHAR(1),
	MSG_JOB_BATCH_STAT_TEXT VARCHAR(100),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	FILE_PROC_NAME VARCHAR(1500),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`JOB_BATCH_START_DT_TM` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID)
);


-- BATCH_JOB_INSTANCE definition


-- Drop table


DROP TABLE IF EXISTS BATCH_JOB_INSTANCE;
CREATE TABLE BATCH_JOB_INSTANCE (
	JOB_INSTANCE_ID DECIMAL(19,0),
	VERSION DECIMAL(19,0),
	JOB_NAME VARCHAR(100),
	JOB_KEY VARCHAR(32),
	UNIQUE KEY JOB_INST_UN (JOB_NAME,JOB_KEY),
	CHECK (`JOB_INSTANCE_ID` IS NOT NULL),
	CHECK (`JOB_NAME` IS NOT NULL),
	CHECK (`JOB_KEY` IS NOT NULL),
	PRIMARY KEY (JOB_INSTANCE_ID)
);


-- B_UT_ALLOC definition


-- Drop table


DROP TABLE IF EXISTS B_UT_ALLOC;
CREATE TABLE B_UT_ALLOC (
	PERFORMANCE_ID VARCHAR(10),
	ASET_ALLOC_WEIGHT DECIMAL(19,5),
	ALLOC_CLASS_NAME VARCHAR(10),
	PORTF_DATE DATE,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`ALLOC_CLASS_NAME` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PERFORMANCE_ID,ALLOC_CLASS_NAME,JOB_BATCH_EXEC_ID)
);


-- B_UT_ASET_ALLOC definition


-- Drop table


DROP TABLE IF EXISTS B_UT_ASET_ALLOC;
CREATE TABLE B_UT_ASET_ALLOC (
	FUND_CAT_CDE VARCHAR(20),
	ASET_ALLOC_CLASS_TYPE_CDE VARCHAR(15),
	ASET_ALLOC_CLASS_CDE VARCHAR(15),
	ASET_ALLOC_WGHT_PCT DECIMAL(19,5),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`FUND_CAT_CDE` IS NOT NULL),
	CHECK (`ASET_ALLOC_CLASS_TYPE_CDE` IS NOT NULL),
	CHECK (`ASET_ALLOC_CLASS_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,FUND_CAT_CDE,ASET_ALLOC_CLASS_TYPE_CDE,ASET_ALLOC_CLASS_CDE)
);


-- B_UT_HLDG_ALLOC definition


-- Drop table


DROP TABLE IF EXISTS B_UT_HLDG_ALLOC;
CREATE TABLE B_UT_HLDG_ALLOC (
	PERFORMANCE_ID VARCHAR(10),
	HLDG_ALLOC_WGHT DECIMAL(19,5),
	HLDG_ALLOC_WGHT_NET DECIMAL(19,5),
	HLDG_ALLOC_CLASS_NAME VARCHAR(10),
	HLDG_ALLOC_CLASS_TYPE VARCHAR(10),
	PORTF_DATE DATE,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`HLDG_ALLOC_CLASS_NAME` IS NOT NULL),
	CHECK (`HLDG_ALLOC_CLASS_TYPE` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PERFORMANCE_ID,HLDG_ALLOC_CLASS_NAME,HLDG_ALLOC_CLASS_TYPE,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_BUHA_JOB_BATCH_EXEC_ID ON B_UT_HLDG_ALLOC (JOB_BATCH_EXEC_ID);
CREATE INDEX INX_ON_BUHA_PERFORMANCE_ID ON B_UT_HLDG_ALLOC (PERFORMANCE_ID);


-- B_UT_INSTM definition


-- Drop table


DROP TABLE IF EXISTS B_UT_INSTM;
CREATE TABLE B_UT_INSTM (
	PERFORMANCE_ID VARCHAR(10),
	FUND_CAT_CDE VARCHAR(10),
	SHARE_CLASS_TYPE_TEXT VARCHAR(40),
	PROD_NAV_PRC_AMT DECIMAL(19,5),
	PROD_NAV_CHRG_AMT DECIMAL(19,5),
	ASET_SURVY_NET_AMT DECIMAL(19,5),
	ASET_SHARE_CLASS_NET_AMT DECIMAL(19,5),
	PROD_OVRL_RATENG_NUM DECIMAL(38,0),
	FUND_MGMT_EXPN_RATE DECIMAL(19,5),
	YIELD_1YR_PCT DECIMAL(19,5),
	PROD_INCPT_DT DATE,
	PROD_TRNVR_RATE DECIMAL(19,5),
	RTRN_STD_DVIAT_3YR_NUM DECIMAL(19,5),
	PROD_STYL_BOX_NUM DECIMAL(38,0),
	INCM_FIX_STYL_BOX_NUM DECIMAL(38,0),
	PROD_OVRL_RATENG_DEDUC_TAX_NUM DECIMAL(38,0),
	CREDIT_QLTY_AVG_NUM DECIMAL(38,0),
	RANK_QTL_1YR_NUM DECIMAL(38,0),
	RANK_QTL_3YR_NUM DECIMAL(38,0),
	RANK_QTL_5YR_NUM DECIMAL(38,0),
	RANK_QTL_10YR_NUM DECIMAL(38,0),
	RTRN_SINCE_INCPT_AMT DECIMAL(19,5),
	RTRN_YTD_AMT DECIMAL(19,5),
	RTRN_1YR_BFORE_AMT DECIMAL(19,5),
	RTRN_2YR_BFORE_AMT DECIMAL(19,5),
	RTRN_3YR_BFORE_AMT DECIMAL(19,5),
	RTRN_4YR_BFORE_AMT DECIMAL(19,5),
	RTRN_5YR_BFORE_AMT DECIMAL(19,5),
	BETA_VALUE_1YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_1YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_1YR_NUM DECIMAL(19,5),
	SHRP_1YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_1YR_PCT DECIMAL(19,5),
	BETA_VALUE_3YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_3YR_NUM DECIMAL(19,5),
	SHRP_3YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_3YR_PCT DECIMAL(19,5),
	BETA_VALUE_5YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_5YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_5YR_NUM DECIMAL(19,5),
	SHRP_5YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_5YR_PCT DECIMAL(19,5),
	BETA_VALUE_10YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_10YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_10YR_NUM DECIMAL(19,5),
	SHRP_10YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_10YR_PCT DECIMAL(19,5),
	INVST_INIT_MIN_AMT DECIMAL(19,5),
	INVST_SUBQ_MIN_AMT DECIMAL(19,5),
	MIN_SUBQ_RRSP_INVST DECIMAL(19,5),
	REGIS_RATEIRE_SAVNG_PLAN_IND VARCHAR(10),
	FUND_DATA_DATE DATE,
	RTRN_1_DAY_AMT DECIMAL(19,5),
	RTRN_1MO_AMT DECIMAL(19,5),
	RTRN_3MO_AMT DECIMAL(19,5),
	RTRN_6MO_AMT DECIMAL(19,5),
	RTRN_1YR_AMT DECIMAL(19,5),
	RTRN_3YR_AMT DECIMAL(19,5),
	RTRN_5YR_AMT DECIMAL(19,5),
	RTRN_10YR_AMT DECIMAL(19,5),
	INVST_IRA_MIN_AMT DECIMAL(19,5),
	FUND_BID_ASK_PRICE_DT DATE,
	FUND_BID_CLOSE_PRC_AMT DECIMAL(19,5),
	FUND_ASK_CLOSE_PRICE_AMT DECIMAL(19,5),
	FUND_MKT_PRICE_DT DATE,
	FUND_MKT_PRICE_AMT DECIMAL(19,5),
	TRACKINGERROR1YR DECIMAL(19,5),
	MARKETPRICECHANGE DECIMAL(19,5),
	RSK_3YR VARCHAR(100),
	MEAN_VALUE_5YR_AMT DECIMAL(19,5),
	FREQ_DIV_DISTB_TEXT VARCHAR(200),
	CCY_CDE CHAR(3),
	CCY_PUCHASE VARCHAR(500),
	CCY_ASOF_REP VARCHAR(100),
	REC_UPDT_DT_TM DATETIME,
	CHRG_OG_ANNL_AMT BIGINT,
	ACTL_MGMT_FEE BIGINT,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	RATING_DATE DATE,
	MONTH_ENDDATE DATE,
	ENDDATE_YEARRISK DATE,
	ENDDATE_RISKLVLCDE DATE,
	NET_EXPENSE_RATIO DECIMAL(19,5),
	FUND_ID VARCHAR(15),
	AVG_CR_QLTY_NAME VARCHAR(200),
	CRED_QLTY_BKDN_DATE DATE,
	YLD_TO_MAT BIGINT,
	EFF_DRTN BIGINT,
	CURR_YLD BIGINT,
	RTRN_1MO_DPN DECIMAL(19,5),
	RTRN_3MO_DPN DECIMAL(19,5),
	RTRN_6MO_DPN DECIMAL(19,5),
	RTRN_YTD_DPN DECIMAL(19,5),
	RTRN_1YR_DPN DECIMAL(19,5),
	RTRN_3YR_DPN DECIMAL(19,5),
	RTRN_5YR_DPN DECIMAL(19,5),
	RTRN_10YR_DPN DECIMAL(19,5),
	RTRN_SINCE_INCPT_DPN BIGINT,
	BOND_HOLD_NUM DECIMAL(19,5),
	STOCK_HOLD_NUM DECIMAL(19,5),
	HOLD_ALLOC_PORTF_DATE DATE,
	KIID_ONGOING_CHARGE DECIMAL(19,5),
	KIID_ONGOING_CHARGE_DATE DATE,
	INDEX_ID VARCHAR(300),
	INDEX_NAME VARCHAR(300),
	SURVY_NET_ASET_DATE DATE,
	WEEK_RANGE_LOW_DATE DATE,
	WEEK_RANGE_HIGH_DATE DATE,
	RISK_FREE_RATE_NAME VARCHAR(300),
	RLTV_RISK_MEAS_INDEX_NAME VARCHAR(300),
	ANNL_RPT_DATE DATE,
	MSTARID VARCHAR(15),
	AS_OF_ORIGINAL_REPORTED FLOAT,
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PERFORMANCE_ID,JOB_BATCH_EXEC_ID)
);


-- B_UT_PROD definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD;
CREATE TABLE B_UT_PROD (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	CTRY_PROD_TRADE_CDE CHAR(2),
	PROD_TYPE_CDE VARCHAR(15),
	PROD_SUBTP_CDE VARCHAR(30),
	SYMBOL VARCHAR(30),
	PERFORMANCE_ID VARCHAR(30),
	FUNDSERVICE_ID VARCHAR(30),
	PRODUCT_ID VARCHAR(30),
	FUND_CAT_CDE VARCHAR(20),
	PROD_NAME VARCHAR(200),
	PROD_PLL_NAME VARCHAR(200),
	PROD_SLL_NAME VARCHAR(200),
	FUND_FM_CDE VARCHAR(20),
	CCY_PROD_TRADE_CDE CHAR(3),
	UT_RTAIN_MIN_NUM DECIMAL(38,0),
	FUND_RTAIN_MIN_AMT DECIMAL(18,3),
	FUND_SW_IN_MIN_AMT DECIMAL(21,6),
	ALLOW_SELL_MIP_PROD_IND CHAR(1),
	CCY_PROD_CDE CHAR(3),
	RISK_LVL_CDE CHAR(1),
	INVST_INCRM_MIN_AMT DECIMAL(21,6),
	INVST_MIP_INCRM_MIN_AMT DECIMAL(21,6),
	ALLOW_REGU_CNTB_IND CHAR(5),
	HSBC_INVST_INIT_MIN_AMT DECIMAL(19,5),
	HSBC_INVST_SUBQ_MIN_AMT DECIMAL(19,5),
	FUND_MIN_SUBQ_RRSP_INVST VARCHAR(20),
	MIN_INIT_UNITS VARCHAR(20),
	MIN_SUBQ_UNITS VARCHAR(20),
	PROD_SHRT_NAME VARCHAR(200),
	PROD_SHRT_PLL_NAME VARCHAR(200),
	PROD_SHRT_SLL_NAME VARCHAR(200),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	ALLOW_SW_OUT_PROD_IND VARCHAR(20),
	ALLOW_SW_IN_PROD_IND VARCHAR(20),
	ALLOW_TRAD_PROD_IND VARCHAR(20),
	PROD_TAX_FREE_WRAP_ACT_STA_CDE VARCHAR(20),
	LOAN_PROD_OD_MRGN_PCT DECIMAL(20,6),
	CHRG_INIT_SALES_PCT DECIMAL(9,5),
	ANN_MGMT_FEE_PCT DECIMAL(9,5),
	CCY_INVST_CDE VARCHAR(200),
	PRI_SHARE_CLASS_IND CHAR(1),
	PROD_TOP_SELL_RANK_NUM BIGINT,
	TOP_SELL_PROD_IND VARCHAR(20),
	PROD_LNCH_DT DATE,
	MKT_INVST_CDE VARCHAR(5),
	LIST_PROD_CDE VARCHAR(20),
	LIST_PROD_TYPE VARCHAR(20),
	SHRE_CLS_NAME VARCHAR(300),
	SHRE_CLS_NAME_PRI VARCHAR(300),
	SHRE_CLS_NAME_SEC VARCHAR(300),
	FUND_CLASS_CDE VARCHAR(30),
	AMCM_IND CHAR(1),
	DEAL_NEXT_DT DATE,
	PROD_STAT_CDE VARCHAR(10),
	ALLOW_BUY_PROD_IND VARCHAR(10),
	ALLOW_SELL_PROD_IND VARCHAR(10),
	RESTR_ONLN_SCRIB_IND CHAR(1),
	PI_FUND_IND CHAR(1),
	DE_AUTHFUND_IND CHAR(1),
	PAY_CASH_DIV_IND CHAR(1),
	ISLM_PROD_IND CHAR(1),
	EPF_APPOINTED_FUNDS CHAR(1),
	RESTR_INVSTR_PROD_IND CHAR(1),
	UNDL_INDEX_CDE VARCHAR(30),
	UNDL_INDEX_NAME VARCHAR(200),
	UNDL_INDEX_PLL_NAME VARCHAR(200),
	UNDL_INDEX_SLL_NAME VARCHAR(200),
	ESG_IND CHAR(1),
	POPULAR_RANK_NUM BIGINT,
	PREM_RECOM_IND CHAR(1),
	CUT_OFF_TIME DATETIME,
	IN_DEAL_BEF_DATE DATE,
	IN_SCRIB_STL_BEF_DATE DATE,
	IN_REDEMP_STL_BEF_DATE DATE,
	IN_DEAL_AF_DATE DATE,
	IN_SCRIB_STL_AF_DATE DATE,
	IN_REDEMP_STL_AF_DATE DATE,
	INTER_DATE DATE,
	SI_FUND_CAT_CDE VARCHAR(20),
	GBA_ACCT_TRDB CHAR(1),
	GNR_ACCT_TRDB CHAR(1),
	SHORT_LST_RPQ_LVL_NUM BIGINT,
	WPB_PROD_IND CHAR(1),
	CMB_PROD_IND CHAR(1),
	RESTR_CMB_ONLN_SRCH_IND CHAR(1),
	RETIRE_INVST_IND CHAR(1),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`CTRY_PROD_TRADE_CDE` IS NOT NULL),
	CHECK (`PROD_TYPE_CDE` IS NOT NULL),
	CHECK (`PROD_SUBTP_CDE` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PROD_ID,JOB_BATCH_EXEC_ID)
);


-- B_UT_PROD_CAT_PERFM_RTRN definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_CAT_PERFM_RTRN;
CREATE TABLE B_UT_PROD_CAT_PERFM_RTRN (
	PROD_CAT_CDE VARCHAR(20),
	RTRN_AMT_TYPE_CDE VARCHAR(6),
	RTRN_AMT DECIMAL(19,5),
	END_DT DATE,
	PROD_SUBTP_CDE VARCHAR(30),
	PROD_TYPE_CDE VARCHAR(15),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_CAT_CDE` IS NOT NULL),
	CHECK (`RTRN_AMT_TYPE_CDE` IS NOT NULL),
	CHECK (`RTRN_AMT` IS NOT NULL),
	CHECK (`END_DT` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_CAT_CDE,RTRN_AMT_TYPE_CDE,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_BUPCPR_JOB_BATCH_EI ON B_UT_PROD_CAT_PERFM_RTRN (JOB_BATCH_EXEC_ID);


-- B_UT_PROD_CAT_RISK_MEAS definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_CAT_RISK_MEAS;
CREATE TABLE B_UT_PROD_CAT_RISK_MEAS (
	YR_DURATN_CNT DECIMAL(38,0),
	MEAN_VALUE_AMT DECIMAL(19,5),
	RTRN_STD_DVIAT_NUM DECIMAL(19,5),
	SKWNS_NUM DECIMAL(19,5),
	KAUTS_NUM DECIMAL(19,5),
	SHRP_RATE DECIMAL(19,5),
	SRTN_RATE DECIMAL(19,5),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	PROD_CAT_CDE VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`YR_DURATN_CNT` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`PROD_CAT_CDE` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_CAT_CDE)
);


-- B_UT_PROD_CAT_TTL_RTRN_INDEX definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_CAT_TTL_RTRN_INDEX;
CREATE TABLE B_UT_PROD_CAT_TTL_RTRN_INDEX (
	PROD_CAT_CDE VARCHAR(20),
	PROD_SUBTP_CDE VARCHAR(30),
	PROD_TYPE_CDE VARCHAR(15),
	END_DT DATE,
	FREQ_TTL_RTRN_INDEX_TEXT VARCHAR(200),
	CAT_NAV_PRC_AMT DECIMAL(19,5),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_CAT_CDE` IS NOT NULL),
	CHECK (`END_DT` IS NOT NULL),
	CHECK (`FREQ_TTL_RTRN_INDEX_TEXT` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_CAT_CDE,END_DT,FREQ_TTL_RTRN_INDEX_TEXT,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_BUPCTRI_JOB_BATCH_EI ON B_UT_PROD_CAT_TTL_RTRN_INDEX (JOB_BATCH_EXEC_ID);


-- B_UT_PROD_CHANL_ATTR definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_CHANL_ATTR;
CREATE TABLE B_UT_PROD_CHANL_ATTR (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	CHANL_CDE VARCHAR(30),
	ALLOW_BUY_PROD_IND CHAR(1),
	ALLOW_SELL_PROD_IND CHAR(1),
	CTRY_REC_CDE VARCHAR(30),
	GRP_MEMBR_REC_CDE VARCHAR(30),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	ALLOW_SW_OUT_PROD_IND CHAR(1),
	ALLOW_SW_IN_PROD_IND CHAR(1),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`CHANL_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_ID,CHANL_CDE)
);


-- B_UT_PROD_OFER_CHANL definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_OFER_CHANL;
CREATE TABLE B_UT_PROD_OFER_CHANL (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	CHANL_COMN_CDE VARCHAR(30),
	CTRY_REC_CDE VARCHAR(30),
	GRP_MEMBR_REC_CDE VARCHAR(30),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`CHANL_COMN_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_ID,CHANL_COMN_CDE)
);


-- B_UT_PROD_SW definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_SW;
CREATE TABLE B_UT_PROD_SW (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	FUND_UNSW_CDE VARCHAR(30),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`FUND_UNSW_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_ID,FUND_UNSW_CDE)
);


-- B_UT_PROD_SW_GROUP definition


-- Drop table


DROP TABLE IF EXISTS B_UT_PROD_SW_GROUP;
CREATE TABLE B_UT_PROD_SW_GROUP (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	SWITCH_TABLE_GROUP VARCHAR(50),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`SWITCH_TABLE_GROUP` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_ID,SWITCH_TABLE_GROUP)
);


-- B_UT_REFDAT_DESC definition


-- Drop table


DROP TABLE IF EXISTS B_UT_REFDAT_DESC;
CREATE TABLE B_UT_REFDAT_DESC (
	PROD_TYPE_CDE VARCHAR(15),
	PROD_CDE VARCHAR(30),
	PROD_PARNT_CDE VARCHAR(30),
	LANG_NLS_CDE CHAR(5),
	PROD_NLS_NAME VARCHAR(300),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	DISP_SEQ_NUM DECIMAL(38,0),
	CHECK (`PROD_TYPE_CDE` IS NOT NULL),
	CHECK (`PROD_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PROD_TYPE_CDE,PROD_CDE,LANG_NLS_CDE)
);


-- B_UT_SVCE definition


-- Drop table


DROP TABLE IF EXISTS B_UT_SVCE;
CREATE TABLE B_UT_SVCE (
	PERFORMANCE_ID VARCHAR(10),
	FUND_SVCE_ID VARCHAR(10),
	FUND_SVCE_CLASS_TYPE_CDE VARCHAR(50),
	CTRY_FUND_SVCE_NAME VARCHAR(10),
	USER_UPDT_NUM VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	REC_UPDT_DT_TM DATETIME,
	SER_NUM DECIMAL(38,0),
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`FUND_SVCE_ID` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`SER_NUM` IS NOT NULL),
	PRIMARY KEY (JOB_BATCH_EXEC_ID,PERFORMANCE_ID,FUND_SVCE_ID)
);
CREATE INDEX INX_ON_BUS_JOB_BATCH_EXEC_ID ON B_UT_SVCE (JOB_BATCH_EXEC_ID);
CREATE INDEX INX_ON_BUS_PERFORMANCE_ID ON B_UT_SVCE (PERFORMANCE_ID);


-- CACHE_MAP definition


-- Drop table


DROP TABLE IF EXISTS CACHE_MAP;
CREATE TABLE CACHE_MAP (
	`KEY` VARCHAR(1000),
	VAL LONGTEXT,
	REC_UPDT_DT_TM DATETIME,
	REC_UPDT_LA_DT_TM DATETIME,
	CHECK (`KEY` IS NOT NULL),
	CHECK (`VAL` IS NOT NULL),
	PRIMARY KEY (`KEY`(191))
);


-- CUSTOMER definition


-- Drop table


DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER (
	ID DECIMAL(19,0),
	ACTIVE DECIMAL(1,0),
	ALGORITHM VARCHAR(255),
	COUNTRY_CODE VARCHAR(255),
	CUSTOMER_ID VARCHAR(255),
	ENCRYPTED_CUSTOMER_ID VARCHAR(255),
	GROUP_MEMBER VARCHAR(255),
	`DATETIME` DATETIME,
	CHECK (`ID` IS NOT NULL),
	CHECK (`ACTIVE` IS NOT NULL),
	PRIMARY KEY (ID)
);


-- OUTPUT_LOG definition


-- Drop table


DROP TABLE IF EXISTS OUTPUT_LOG;
CREATE TABLE OUTPUT_LOG (
	OUTPUT_TIME DATETIME,
	OUTPUT_LOG VARCHAR(2000)
);


-- O_UT_CAT_ASET_ALLOC definition


-- Drop table


DROP TABLE IF EXISTS O_UT_CAT_ASET_ALLOC;
CREATE TABLE O_UT_CAT_ASET_ALLOC (
	PROD_ID DECIMAL(38,0),
	PROD_NLS_NAME1 VARCHAR(300),
	PROD_NLS_NAME2 VARCHAR(300),
	PROD_NLS_NAME3 VARCHAR(300),
	FUND_ALLOC_WGHT DECIMAL(19,5),
	ALLOC_CAT_AVE DECIMAL(19,5),
	FUND_ALLOC_WGHT_IND VARCHAR(7),
	ALLOC_CAT_AVE_IND VARCHAR(7),
	ALLOC_CLASS_TYPE_CDE VARCHAR(10),
	ASET_ALLOC_CLASS_CDE VARCHAR(15),
	REC_UPDT_DT_TM DATETIME,
	USER_UPDT_NUM VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_ID,ALLOC_CLASS_TYPE_CDE,ASET_ALLOC_CLASS_CDE,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_OUCAA_JOB_BATCH_EXEC_ID ON O_UT_CAT_ASET_ALLOC (JOB_BATCH_EXEC_ID);


-- O_UT_PROD_CAT definition


-- Drop table


DROP TABLE IF EXISTS O_UT_PROD_CAT;
CREATE TABLE O_UT_PROD_CAT (
	PROD_ID DECIMAL(38,0),
	PROD_CAT_CDE VARCHAR(20),
	PROD_SUBTP_CDE VARCHAR(30),
	PROD_TYPE_CDE VARCHAR(15),
	PROD_CAT_NAME VARCHAR(200),
	CTRY_NAME CHAR(2),
	PROD_NLS_NAME1 VARCHAR(300),
	PROD_NLS_NAME2 VARCHAR(300),
	PROD_NLS_NAME3 VARCHAR(300),
	ASET_CLASS_CDE VARCHAR(20),
	RTRN_STD_DVIAT_NUM DECIMAL(19,5),
	REC_UPDT_DT_TM DATETIME,
	USER_UPDT_NUM VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`PROD_SUBTP_CDE` IS NOT NULL),
	CHECK (`PROD_TYPE_CDE` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_ID,PROD_CAT_CDE,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_OUPC_JOB_BATCH_EXEC_ID ON O_UT_PROD_CAT (JOB_BATCH_EXEC_ID);


-- O_UT_PROD_CAT_ORVW definition


-- Drop table


DROP TABLE IF EXISTS O_UT_PROD_CAT_ORVW;
CREATE TABLE O_UT_PROD_CAT_ORVW (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_TYPE_CDE VARCHAR(15),
	FUND_CAT_CDE VARCHAR(20),
	DISP_SEQ_NUM_CAT DECIMAL(38,0),
	PROD_NLS_NAME_CAT1 VARCHAR(100),
	PROD_NLS_NAME_CAT2 VARCHAR(100),
	PROD_NLS_NAME_CAT3 VARCHAR(100),
	FUND_CAT_LVL1_CDE VARCHAR(200),
	DISP_SEQ_NUM_LVL1_CAT BIGINT,
	PROD_NLS_LVL1_NAME1 VARCHAR(200),
	PROD_NLS_LVL1_NAME2 VARCHAR(200),
	PROD_NLS_LVL1_NAME3 VARCHAR(200),
	RTRN_1YR_AMT DECIMAL(19,5),
	RTRN_3YR_AMT DECIMAL(19,5),
	RTRN_5YR_AMT DECIMAL(19,5),
	RTRN_10YR_AMT DECIMAL(19,5),
	RTRN_STD_DVIAT_3YR_NUM DECIMAL(19,5),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	PROD_ID BIGINT,
	RESTR_ONLN_SCRIB_IND CHAR(1),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_TYPE_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PROD_ID,JOB_BATCH_EXEC_ID)
);


-- O_UT_PROD_CAT_PERFM_RTRN definition


-- Drop table


DROP TABLE IF EXISTS O_UT_PROD_CAT_PERFM_RTRN;
CREATE TABLE O_UT_PROD_CAT_PERFM_RTRN (
	PROD_CAT_CDE VARCHAR(20),
	RTRN_AMT_TYPE_CDE VARCHAR(6),
	RTRN_AMT DECIMAL(19,5),
	END_DT DATE,
	PROD_SUBTP_CDE VARCHAR(30),
	PROD_TYPE_CDE VARCHAR(15),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_CAT_CDE` IS NOT NULL),
	CHECK (`RTRN_AMT_TYPE_CDE` IS NOT NULL),
	CHECK (`RTRN_AMT` IS NOT NULL),
	CHECK (`END_DT` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_CAT_CDE,RTRN_AMT_TYPE_CDE,JOB_BATCH_EXEC_ID)
);


-- O_UT_PROD_CAT_TTL_RTRN_INDEX definition


-- Drop table


DROP TABLE IF EXISTS O_UT_PROD_CAT_TTL_RTRN_INDEX;
CREATE TABLE O_UT_PROD_CAT_TTL_RTRN_INDEX (
	PROD_CAT_CDE VARCHAR(20),
	PROD_SUBTP_CDE VARCHAR(30),
	PROD_TYPE_CDE VARCHAR(15),
	END_DT DATE,
	FREQ_TTL_RTRN_INDEX_TEXT VARCHAR(200),
	CAT_NAV_PRC_AMT DECIMAL(19,5),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_CAT_CDE` IS NOT NULL),
	CHECK (`END_DT` IS NOT NULL),
	CHECK (`FREQ_TTL_RTRN_INDEX_TEXT` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_CAT_CDE,END_DT,FREQ_TTL_RTRN_INDEX_TEXT,JOB_BATCH_EXEC_ID)
);


-- O_UT_PROD_INSTM definition


-- Drop table


DROP TABLE IF EXISTS O_UT_PROD_INSTM;
CREATE TABLE O_UT_PROD_INSTM (
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	CTRY_PROD_TRADE_CDE CHAR(2),
	PROD_TYPE_CDE VARCHAR(15),
	PROD_SUBTP_CDE VARCHAR(30),
	SYMBOL VARCHAR(30),
	PERFORMANCE_ID VARCHAR(30),
	FUNDSERVICE_ID VARCHAR(30),
	PRODUCT_ID VARCHAR(30),
	PROD_NAME VARCHAR(200),
	PROD_PLL_NAME VARCHAR(200),
	PROD_SLL_NAME VARCHAR(200),
	FUND_FM_CDE VARCHAR(20),
	PROD_NLS_NAME_FAM1 VARCHAR(300),
	PROD_NLS_NAME_FAM2 VARCHAR(300),
	PROD_NLS_NAME_FAM3 VARCHAR(300),
	PROD_NLS_NAME_CAT1 VARCHAR(100),
	PROD_NLS_NAME_CAT2 VARCHAR(100),
	PROD_NLS_NAME_CAT3 VARCHAR(100),
	CCY_PROD_TRADE_CDE CHAR(3),
	FUND_RTAIN_MIN_AMT DECIMAL(18,3),
	FUND_SW_IN_MIN_AMT DECIMAL(21,6),
	ALLOW_SELL_MIP_PROD_IND CHAR(1),
	CCY_PROD_CDE CHAR(3),
	RISK_LVL_CDE CHAR(1),
	INVST_INCRM_MIN_AMT DECIMAL(21,6),
	INVST_MIP_INCRM_MIN_AMT DECIMAL(21,6),
	ALLOW_REGU_CNTB_IND CHAR(5),
	FUND_MIN_SUBQ_RRSP_INVST VARCHAR(20),
	MIN_INIT_UNITS VARCHAR(20),
	MIN_SUBQ_UNITS VARCHAR(20),
	FUND_CAT_CDE VARCHAR(20),
	SHARE_CLASS_TYPE_TEXT VARCHAR(40),
	PROD_NAV_PRC_AMT DECIMAL(19,5),
	PROD_NAV_CHRG_AMT DECIMAL(19,5),
	ASET_SURVY_NET_AMT DECIMAL(19,5),
	ASET_SHARE_CLASS_NET_AMT DECIMAL(19,5),
	PROD_OVRL_RATENG_NUM DECIMAL(38,0),
	FUND_MGMT_EXPN_RATE DECIMAL(19,5),
	YIELD_1YR_PCT DECIMAL(19,5),
	PROD_INCPT_DT DATE,
	PROD_TRNVR_RATE DECIMAL(19,5),
	RTRN_STD_DVIAT_3YR_NUM DECIMAL(19,5),
	PROD_STYL_BOX_NUM DECIMAL(38,0),
	INCM_FIX_STYL_BOX_NUM DECIMAL(38,0),
	PROD_OVRL_RATENG_DEDUC_TAX_NUM DECIMAL(38,0),
	CREDIT_QLTY_AVG_NUM DECIMAL(38,0),
	RANK_QTL_1YR_NUM DECIMAL(38,0),
	RTRN_SINCE_INCPT_AMT DECIMAL(19,5),
	RTRN_YTD_AMT DECIMAL(19,5),
	RTRN_1YR_BFORE_AMT DECIMAL(19,5),
	RTRN_2YR_BFORE_AMT DECIMAL(19,5),
	RTRN_3YR_BFORE_AMT DECIMAL(19,5),
	RTRN_4YR_BFORE_AMT DECIMAL(19,5),
	RTRN_5YR_BFORE_AMT DECIMAL(19,5),
	BETA_VALUE_1YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_1YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_1YR_NUM DECIMAL(19,5),
	SHRP_1YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_1YR_PCT DECIMAL(19,5),
	BETA_VALUE_3YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_3YR_NUM DECIMAL(19,5),
	SHRP_3YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_3YR_PCT DECIMAL(19,5),
	BETA_VALUE_5YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_5YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_5YR_NUM DECIMAL(19,5),
	SHRP_5YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_5YR_PCT DECIMAL(19,5),
	BETA_VALUE_10YR_NUM DECIMAL(19,5),
	RTRN_STD_DVIAT_10YR_NUM DECIMAL(19,5),
	ALPHA_VALUE_10YR_NUM DECIMAL(19,5),
	SHRP_10YR_RATE DECIMAL(19,5),
	PROD_MVMT_INDEX_10YR_PCT DECIMAL(19,5),
	INVST_INIT_MIN_AMT DECIMAL(19,5),
	INVST_SUBQ_MIN_AMT DECIMAL(19,5),
	HSBC_INVST_INIT_MIN_AMT DECIMAL(19,5),
	HSBC_INVST_SUBQ_MIN_AMT DECIMAL(19,5),
	MIN_SUBQ_RRSP_INVST DECIMAL(19,5),
	REGIS_RATEIRE_SAVNG_PLAN_IND VARCHAR(10),
	FUND_DATA_DATE DATE,
	RANK_QTL_3YR_NUM DECIMAL(38,0),
	RANK_QTL_5YR_NUM DECIMAL(38,0),
	RANK_QTL_10YR_NUM DECIMAL(38,0),
	RTRN_1_DAY_AMT DECIMAL(19,5),
	RTRN_1MO_AMT DECIMAL(19,5),
	RTRN_3MO_AMT DECIMAL(19,5),
	RTRN_6MO_AMT DECIMAL(19,5),
	RTRN_1YR_AMT DECIMAL(19,5),
	RTRN_3YR_AMT DECIMAL(19,5),
	RTRN_5YR_AMT DECIMAL(19,5),
	RTRN_10YR_AMT DECIMAL(19,5),
	INVST_IRA_MIN_AMT DECIMAL(19,5),
	FUND_BID_ASK_PRICE_DT DATE,
	FUND_BID_CLOSE_PRC_AMT DECIMAL(19,5),
	FUND_ASK_CLOSE_PRICE_AMT DECIMAL(19,5),
	FUND_MKT_PRICE_DT DATE,
	FUND_MKT_PRICE_AMT DECIMAL(19,5),
	TRACKINGERROR1YR DECIMAL(19,5),
	MARKETPRICECHANGE DECIMAL(19,5),
	RSK_3YR VARCHAR(100),
	MEAN_VALUE_5YR_AMT DECIMAL(19,5),
	FREQ_DIV_DISTB_TEXT VARCHAR(200),
	CCY_CDE CHAR(3),
	CCY_PUCHASE VARCHAR(500),
	PROD_SHRT_NAME VARCHAR(200),
	PROD_SHRT_PLL_NAME VARCHAR(200),
	PROD_SHRT_SLL_NAME VARCHAR(200),
	CCY_ASOF_REP VARCHAR(100),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	CHRG_OG_ANNL_AMT BIGINT,
	ACTL_MGMT_FEE BIGINT,
	ALLOW_SW_OUT_PROD_IND VARCHAR(20),
	ALLOW_SW_IN_PROD_IND VARCHAR(20),
	ALLOW_TRAD_PROD_IND VARCHAR(20),
	RATING_DATE DATE,
	MONTH_ENDDATE DATE,
	ENDDATE_YEARRISK DATE,
	ENDDATE_RISKLVLCDE DATE,
	PROD_TAX_FREE_WRAP_ACT_STA_CDE VARCHAR(20),
	DISP_SEQ_NUM_FAM DECIMAL(38,0),
	DISP_SEQ_NUM_CAT DECIMAL(38,0),
	NET_EXPENSE_RATIO DECIMAL(19,5),
	LOAN_PROD_OD_MRGN_PCT DECIMAL(20,6),
	CHRG_INIT_SALES_PCT DECIMAL(9,5),
	ANN_MGMT_FEE_PCT DECIMAL(9,5),
	FUND_ID VARCHAR(15),
	AVG_CR_QLTY_NAME VARCHAR(200),
	DISP_SEQ_NUM_ACQN BIGINT,
	DISP_SEQ_NUM_DF BIGINT,
	CRED_QLTY_BKDN_DATE DATE,
	CCY_INVST_CDE VARCHAR(200),
	YLD_TO_MAT BIGINT,
	EFF_DRTN BIGINT,
	CURR_YLD BIGINT,
	FUND_CAT_LVL1_CDE VARCHAR(200),
	DISP_SEQ_NUM_LVL1_CAT BIGINT,
	PROD_NLS_LVL1_NAME1 VARCHAR(200),
	PROD_NLS_LVL1_NAME2 VARCHAR(200),
	PROD_NLS_LVL1_NAME3 VARCHAR(200),
	PRI_SHARE_CLASS_IND CHAR(1),
	TOP_PERFORMERS_IND CHAR(1),
	RTRN_1MO_DPN DECIMAL(19,5),
	RTRN_3MO_DPN DECIMAL(19,5),
	RTRN_6MO_DPN DECIMAL(19,5),
	RTRN_YTD_DPN DECIMAL(19,5),
	RTRN_1YR_DPN DECIMAL(19,5),
	RTRN_3YR_DPN DECIMAL(19,5),
	RTRN_5YR_DPN DECIMAL(19,5),
	RTRN_10YR_DPN DECIMAL(19,5),
	RTRN_SINCE_INCPT_DPN BIGINT,
	PROD_TOP_SELL_RANK_NUM BIGINT,
	TOP_SELL_PROD_IND VARCHAR(20),
	PROD_LNCH_DT DATE,
	MKT_INVST_CDE VARCHAR(5),
	LIST_PROD_CDE VARCHAR(20),
	LIST_PROD_TYPE VARCHAR(20),
	BOND_HOLD_NUM DECIMAL(19,5),
	STOCK_HOLD_NUM DECIMAL(19,5),
	HOLD_ALLOC_PORTF_DATE DATE,
	KIID_ONGOING_CHARGE DECIMAL(19,5),
	KIID_ONGOING_CHARGE_DATE DATE,
	PROD_NLS_NAME_INVST1 VARCHAR(200),
	PROD_NLS_NAME_INVST2 VARCHAR(200),
	PROD_NLS_NAME_INVST3 VARCHAR(200),
	DISP_SEQ_NUM_INVST DECIMAL(38,0),
	SHRE_CLS_NAME VARCHAR(300),
	SHRE_CLS_NAME_PRI VARCHAR(300),
	SHRE_CLS_NAME_SEC VARCHAR(300),
	FUND_CLASS_CDE VARCHAR(30),
	AMCM_IND CHAR(1),
	DEAL_NEXT_DT DATE,
	INDEX_ID VARCHAR(300),
	INDEX_NAME VARCHAR(300),
	SURVY_NET_ASET_DATE DATE,
	WEEK_RANGE_LOW_DATE DATE,
	WEEK_RANGE_HIGH_DATE DATE,
	RISK_FREE_RATE_NAME VARCHAR(300),
	RLTV_RISK_MEAS_INDEX_NAME VARCHAR(300),
	PROD_STAT_CDE VARCHAR(10),
	ALLOW_BUY_PROD_IND VARCHAR(10),
	ALLOW_SELL_PROD_IND VARCHAR(10),
	ANNL_RPT_DATE DATE,
	RESTR_ONLN_SCRIB_IND CHAR(1),
	PI_FUND_IND CHAR(1),
	DE_AUTHFUND_IND CHAR(1),
	FUND_CAT_LVL0_CDE VARCHAR(200),
	DISP_SEQ_NUM_LVL0_CAT BIGINT,
	PROD_NLS_LVL0_NAME1 VARCHAR(200),
	PROD_NLS_LVL0_NAME2 VARCHAR(200),
	PROD_NLS_LVL0_NAME3 VARCHAR(200),
	MSTARID VARCHAR(15),
	PAY_CASH_DIV_IND CHAR(1),
	ISLM_PROD_IND CHAR(1),
	EPF_APPOINTED_FUNDS CHAR(1),
	RESTR_INVSTR_PROD_IND CHAR(1),
	UNDL_INDEX_CDE VARCHAR(30),
	UNDL_INDEX_NAME VARCHAR(200),
	UNDL_INDEX_PLL_NAME VARCHAR(200),
	UNDL_INDEX_SLL_NAME VARCHAR(200),
	ESG_IND CHAR(1),
	POPULAR_RANK_NUM BIGINT,
	MSTAR_CCY_CDE CHAR(3),
	AS_OF_ORIGINAL_REPORTED FLOAT,
	PREM_RECOM_IND CHAR(1),
	CUT_OFF_TIME DATETIME,
	IN_DEAL_BEF_DATE DATE,
	IN_SCRIB_STL_BEF_DATE DATE,
	IN_REDEMP_STL_BEF_DATE DATE,
	IN_DEAL_AF_DATE DATE,
	IN_SCRIB_STL_AF_DATE DATE,
	IN_REDEMP_STL_AF_DATE DATE,
	INTER_DATE DATE,
	SI_FUND_CAT_CDE VARCHAR(20),
	GBA_ACCT_TRDB CHAR(1),
	GNR_ACCT_TRDB CHAR(1),
	SHORT_LST_RPQ_LVL_NUM BIGINT,
	WPB_PROD_IND CHAR(1),
	CMB_PROD_IND CHAR(1),
	RESTR_CMB_ONLN_SRCH_IND CHAR(1),
	CURRENCY_ID VARCHAR(10),
	RETIRE_INVST_IND CHAR(1),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`CTRY_PROD_TRADE_CDE` IS NOT NULL),
	CHECK (`PROD_TYPE_CDE` IS NOT NULL),
	CHECK (`PROD_SUBTP_CDE` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PROD_ID,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_OUPI_JOB_BATCH_EXEC_ID ON O_UT_PROD_INSTM (JOB_BATCH_EXEC_ID);
CREATE INDEX INX_ON_OUPI_PERFORMANCE_ID ON O_UT_PROD_INSTM (PERFORMANCE_ID);
CREATE INDEX INX_ON_OUPI_SYMBOL ON O_UT_PROD_INSTM (SYMBOL);


-- PROD_CLOSE_MKT_PRICE definition


-- Drop table


DROP TABLE IF EXISTS PROD_CLOSE_MKT_PRICE;
CREATE TABLE PROD_CLOSE_MKT_PRICE (
	PROD_CLOSE_MKT_PRICE_ID DECIMAL(38,0),
	PROD_ID DECIMAL(38,0),
	PROD_CLOSE_DT DATE,
	PROD_CLOSE_PRC_AMT DECIMAL(38,5),
	CCY_CLOSE_PRC_CDE CHAR(3),
	PROD_BID_CLOSE_PRC_AMT DECIMAL(38,5),
	PROD_ASK_CLOSE_PRICE_AMT DECIMAL(38,5),
	USER_UPDT_NUM VARCHAR(20),
	REC_UPDT_DT_TM DATETIME,
	SHARE_TRD_CNT DECIMAL(38,0),
	PROD_TRNVR_AMT DECIMAL(19,5),
	PRD_CLO_PRC_CPEVT_ADJ_PRV_AMT DECIMAL(19,5),
	CHECK (`PROD_CLOSE_MKT_PRICE_ID` IS NOT NULL),
	PRIMARY KEY (PROD_CLOSE_MKT_PRICE_ID)
);


-- STG_FUNDS_CSV definition


-- Drop table


DROP TABLE IF EXISTS STG_FUNDS_CSV;
CREATE TABLE STG_FUNDS_CSV (
	MSTARID VARCHAR(15),
	BATCH_ID DECIMAL(10,0),
	ALPHA10YR FLOAT,
	ALPHA1YR FLOAT,
	ALPHA3YR FLOAT,
	ALPHA5YR FLOAT,
	ANNUALREPORTONGOINGCHARGE FLOAT,
	AVERAGECREDITQUALITY DECIMAL(10,0),
	BETA10YR FLOAT,
	BETA1YR FLOAT,
	BETA3YR FLOAT,
	BETA5YR FLOAT,
	CATEGORYRSQUARED5YR FLOAT,
	CATEGORYCODE VARCHAR(15),
	CATEGORYNAME VARCHAR(100),
	CATEGORYRSQUARED10YR FLOAT,
	CURRENCYID VARCHAR(10),
	DAYENDNAV FLOAT,
	DISTRIBUTIONFREQUENCY VARCHAR(20),
	EQUITYSTYLEBOX DECIMAL(10,0),
	FIXEDINCOMESTYLEBOX DECIMAL(10,0),
	FRONTLOADS_BREAKPOINTUNIT VARCHAR(15),
	FRONTLOADS_BREAKPOINTUNIT_2 VARCHAR(15),
	FRONTLOADS_BREAKPOINTUNIT_3 VARCHAR(15),
	FRONTLOADS_BREAKPOINTUNIT_4 VARCHAR(15),
	FRONTLOADS_BREAKPOINTUNIT_5 VARCHAR(15),
	FRONTLOADS_HIGHBREAKPOINT DECIMAL(10,0),
	FRONTLOADS_HIGHBREAKPOINT_2 DECIMAL(10,0),
	FRONTLOADS_HIGHBREAKPOINT_3 DECIMAL(10,0),
	FRONTLOADS_HIGHBREAKPOINT_4 DECIMAL(10,0),
	FRONTLOADS_HIGHBREAKPOINT_5 DECIMAL(10,0),
	FRONTLOADS_LOWBREAKPOINT DECIMAL(10,0),
	FRONTLOADS_LOWBREAKPOINT_2 DECIMAL(10,0),
	FRONTLOADS_LOWBREAKPOINT_3 DECIMAL(10,0),
	FRONTLOADS_LOWBREAKPOINT_4 DECIMAL(10,0),
	FRONTLOADS_LOWBREAKPOINT_5 DECIMAL(10,0),
	FRONTLOADS_UNIT VARCHAR(15),
	FRONTLOADS_UNIT_2 VARCHAR(15),
	FRONTLOADS_UNIT_3 VARCHAR(15),
	FRONTLOADS_UNIT_4 VARCHAR(15),
	FRONTLOADS_UNIT_5 VARCHAR(15),
	FRONTLOADS_VALUE FLOAT,
	FRONTLOADS_VALUE_2 FLOAT,
	FRONTLOADS_VALUE_3 FLOAT,
	FRONTLOADS_VALUE_4 FLOAT,
	FRONTLOADS_VALUE_5 FLOAT,
	FUNDNAME VARCHAR(200),
	FUNDSERVDETAILS_CLASSTYPE VARCHAR(50),
	FUNDSERVDETAILS_CLASSTYPE_3 VARCHAR(50),
	FUNDSERVDETAILS_CLASSTYPE_4 VARCHAR(50),
	FUNDSERVDETAILS_CLASSTYPE_5 VARCHAR(50),
	FUNDSERVDETAILS_COUNTRYID VARCHAR(10),
	FUNDSERVDETAILS_COUNTRYID_2 VARCHAR(10),
	FUNDSERVDETAILS_COUNTRYID_3 VARCHAR(10),
	FUNDSERVDETAILS_COUNTRYID_4 VARCHAR(10),
	FUNDSERVDETAILS_COUNTRYID_5 VARCHAR(10),
	FUNDSERVDETAILS_FUNDSERV VARCHAR(200),
	FUNDSERVDETAILS_FUNDSERV_2 VARCHAR(200),
	FUNDSERVDETAILS_FUNDSERV_3 VARCHAR(200),
	FUNDSERVDETAILS_FUNDSERV_4 VARCHAR(200),
	FUNDSERVDETAILS_FUNDSERV_5 VARCHAR(200),
	FUNDSERVS VARCHAR(25),
	FUNDSERVS_2 VARCHAR(25),
	FUNDSERVS_3 VARCHAR(25),
	FUNDSERVS_4 VARCHAR(25),
	FUNDSERVS_5 VARCHAR(25),
	FUNDSERVDETAILS_CLASSTYPE_2 VARCHAR(50),
	GROSSEXPENSERATIO FLOAT,
	HOLDINGDETAIL_NAME VARCHAR(100),
	HOLDINGDETAIL_NAME_10 VARCHAR(100),
	HOLDINGDETAIL_NAME_2 VARCHAR(100),
	HOLDINGDETAIL_NAME_3 VARCHAR(100),
	HOLDINGDETAIL_NAME_4 VARCHAR(100),
	HOLDINGDETAIL_NAME_5 VARCHAR(100),
	HOLDINGDETAIL_NAME_6 VARCHAR(100),
	HOLDINGDETAIL_NAME_7 VARCHAR(100),
	HOLDINGDETAIL_NAME_8 VARCHAR(100),
	HOLDINGDETAIL_NAME_9 VARCHAR(100),
	HOLDINGDETAIL_WEIGHTING FLOAT,
	HOLDINGDETAIL_WEIGHTING_10 FLOAT,
	HOLDINGDETAIL_WEIGHTING_2 FLOAT,
	HOLDINGDETAIL_WEIGHTING_3 FLOAT,
	HOLDINGDETAIL_WEIGHTING_4 FLOAT,
	HOLDINGDETAIL_WEIGHTING_5 FLOAT,
	HOLDINGDETAIL_WEIGHTING_6 FLOAT,
	HOLDINGDETAIL_WEIGHTING_7 FLOAT,
	HOLDINGDETAIL_WEIGHTING_8 FLOAT,
	HOLDINGDETAIL_WEIGHTING_9 FLOAT,
	ISIN VARCHAR(12),
	INCEPTIONDATE DATETIME,
	KIIDONGOINGCHARGE FLOAT,
	MER FLOAT,
	MAXIMUMFRONTLOAD FLOAT,
	MEAN5YR FLOAT,
	MINIMUMIRA FLOAT,
	MINIMUMINITIAL DECIMAL(10,0),
	MINIMUMSUBSEQUENT DECIMAL(10,0),
	MLTLNGNAMES_CATEGORYNAME VARCHAR(255),
	MLTLNGNAMES_CATEGORYNAME_2 VARCHAR(255),
	MLTLNGNAMES_CATEGORYNAME_3 VARCHAR(255),
	MLTLNGNAMES_CATEGORYNAME_4 VARCHAR(255),
	MLTLNGNAMES_CATEGORYNAME_5 VARCHAR(255),
	MLTLNGNAMES_FUNDNAME VARCHAR(255),
	MLTLNGNAMES_FUNDNAME_2 VARCHAR(255),
	MLTLNGNAMES_FUNDNAME_3 VARCHAR(255),
	MLTLNGNAMES_FUNDNAME_4 VARCHAR(255),
	MLTLNGNAMES_FUNDNAME_5 VARCHAR(255),
	MLTLNGNAMES_LANGUAGEID VARCHAR(10),
	MLTLNGNAMES_LANGUAGEID_2 VARCHAR(10),
	MLTLNGNAMES_LANGUAGEID_3 VARCHAR(10),
	MLTLNGNAMES_LANGUAGEID_4 VARCHAR(10),
	MLTLNGNAMES_LANGUAGEID_5 VARCHAR(10),
	MLTLNGNAMES_LANGUAGENAME VARCHAR(255),
	MLTLNGNAMES_LANGUAGENAME_2 VARCHAR(255),
	MLTLNGNAMES_LANGUAGENAME_3 VARCHAR(255),
	MLTLNGNAMES_LANGUAGENAME_4 VARCHAR(255),
	MLTLNGNAMES_LANGUAGENAME_5 VARCHAR(255),
	MLTLNGNAMES_LEGALNAME VARCHAR(255),
	MLTLNGNAMES_LEGALNAME_2 VARCHAR(255),
	MLTLNGNAMES_LEGALNAME_3 VARCHAR(255),
	MLTLNGNAMES_LEGALNAME_4 VARCHAR(255),
	MLTLNGNAMES_LEGALNAME_5 VARCHAR(255),
	MLTLNGNAMES_PRVDR_CMP_NM VARCHAR(255),
	MLTLNGNAMES_PRVDR_CMP_NM_2 VARCHAR(255),
	MLTLNGNAMES_PRVDR_CMP_NM_3 VARCHAR(255),
	MLTLNGNAMES_PRVDR_CMP_NM_4 VARCHAR(255),
	MLTLNGNAMES_PRVDR_CMP_NM_5 VARCHAR(255),
	NAVCHANGE FLOAT,
	NETEXPENSERATIO FLOAT,
	PERFORMANCEID VARCHAR(15),
	PROVIDERCOMPANYNAME VARCHAR(255),
	PURCHASECURRENCYID VARCHAR(50),
	RRSP VARCHAR(10),
	RANK10YRQUARTILE DECIMAL(10,0),
	RANK1YRQUARTILE DECIMAL(10,0),
	RANK3YRQUARTILE DECIMAL(10,0),
	RANK5YRQUARTILE DECIMAL(10,0),
	RATINGOVERALL DECIMAL(10,0),
	RATINGOVERALL_T DECIMAL(10,0),
	RETURN10YR FLOAT,
	RETURN1DAY FLOAT,
	RETURN1MTH FLOAT,
	RETURN1YR FLOAT,
	RETURN3MTH FLOAT,
	RETURN3YR FLOAT,
	RETURN5YR FLOAT,
	RETURN6MTH FLOAT,
	RETURNSINCEINCEPTION FLOAT,
	RETURNYTD FLOAT,
	RSQUARED1YR FLOAT,
	RSQUARED3YR FLOAT,
	SHARECLASSNETASSETS FLOAT,
	SHARECLASSTYPE VARCHAR(50),
	SHARPERATIO10YR FLOAT,
	SHARPERATIO1YR FLOAT,
	SHARPERATIO3YR FLOAT,
	SHARPERATIO5YR FLOAT,
	STDDEV10YR FLOAT,
	STDDEV1YR FLOAT,
	STDDEV3YR FLOAT,
	STDDEV5YR FLOAT,
	SURVEYEDFUNDNETASSETS FLOAT,
	TICKER VARCHAR(15),
	TURNOVERRATIO FLOAT,
	UPDATED_BY VARCHAR(255),
	UPDATED_ON DATETIME,
	YEAR1 FLOAT,
	YEAR2 FLOAT,
	YEAR3 FLOAT,
	YEAR4 FLOAT,
	YEAR5 FLOAT,
	YIELD1YR FLOAT,
	FUND_DATA_DATE DATE,
	FUND_BID_ASK_PRICE_DT DATE,
	FUND_BID_CLOSE_PRC_AMT DECIMAL(19,5),
	FUND_ASK_CLOSE_PRICE_AMT DECIMAL(19,5),
	FUND_MKT_PRICE_AMT DECIMAL(19,5),
	FUND_MKT_PRICE_DT DATE,
	CCY_CDE CHAR(3),
	CCY_FULL_TXT VARCHAR(100),
	CCY_ASOF_REP VARCHAR(100),
	CCY_PUCHASE VARCHAR(500),
	RSK_3YR VARCHAR(100),
	TRACKINGERROR1YR DECIMAL(19,5),
	MARKETPRICECHANGE DECIMAL(19,5),
	MARKETPRICECHANGEPERCENTAGE DECIMAL(19,5),
	ACTUALMANAGEMENTFEE BIGINT,
	RATINGDATE DATE,
	MONTHENDDATE DATE,
	ENDDATEYEARRISK DATE,
	ENDDATERISKLVLCDE DATE,
	FUNDID VARCHAR(15),
	AVERAGECREDITQUALITYNAME VARCHAR(200),
	ASOFDATE DATE,
	YIELDTOMATURITY BIGINT,
	EFFECTIVEDURATION BIGINT,
	CURRENTYIELD BIGINT,
	PROD_TYPE_CDE VARCHAR(15),
	RETURN1MTHDPN FLOAT,
	RETURN3MTHDPN FLOAT,
	RETURN6MTHDPN FLOAT,
	RETURNYTDDPN FLOAT,
	RETURN1YRDPN FLOAT,
	RETURN3YRDPN FLOAT,
	RETURN5YRDPN FLOAT,
	RETURN10YRDPN FLOAT,
	ASSETALLOCBONDNET FLOAT,
	ASSETALLOCCASHNET FLOAT,
	ASSETALLOCEQUITYNET FLOAT,
	PREFERREDSTOCKNET FLOAT,
	OTHERNET FLOAT,
	PORTFOLIODATE DATE,
	RETURNSINCEINCEPTIONDPN BIGINT,
	STOCKSECTORSBASICMATERIALS FLOAT,
	STOCKSECTORSBASICMATERIALSNET FLOAT,
	STOCKSECTORSCOMMUNIC FLOAT,
	STOCKSECTORSCOMMUNICNET FLOAT,
	STOCKSECTORSCNSMRCYCLICAL FLOAT,
	STOCKSECTORSCNSMRCYCLICALNET FLOAT,
	STOCKSECTORSCNSMRDEFENSIVE FLOAT,
	STOCKSECTORSCNSMRDEFENSIVENET FLOAT,
	STOCKSECTORSHEALTHCARE FLOAT,
	STOCKSECTORSHEALTHCARENET FLOAT,
	STOCKSECTORSINDUSTRIALS FLOAT,
	STOCKSECTORSINDUSTRIALSNET FLOAT,
	STOCKSECTORSREALESTATE FLOAT,
	STOCKSECTORSREALESTATENET FLOAT,
	STOCKSECTORSTECHNOLOGY FLOAT,
	STOCKSECTORSTECHNOLOGYNET FLOAT,
	STOCKSECTORSENERGY FLOAT,
	STOCKSECTORSENERGYNET FLOAT,
	STOCKSECTORSFINANCIAL FLOAT,
	STOCKSECTORSFINANCIALNET FLOAT,
	STOCKSECTORSUTILITIES FLOAT,
	STOCKSECTORSUTILITIESNET FLOAT,
	GLOBALSECTORPORTFOLIODATE DATE,
	EQUITYREGIONUNITEDSTATES FLOAT,
	EQUITYREGIONUNITEDSTATESNET FLOAT,
	EQUITYREGIONCANADA FLOAT,
	EQUITYREGIONCANADANET FLOAT,
	EQUITYREGIONLATINAMERICA FLOAT,
	EQUITYREGIONLATINAMERICANET FLOAT,
	EQUITYREGIONUNITEDKINGDOM FLOAT,
	EQUITYREGIONUNITEDKINGDOMNET FLOAT,
	EQUITYREGIONEUROZONE FLOAT,
	EQUITYREGIONEUROZONENET FLOAT,
	EQUITYREGIONEXEURO FLOAT,
	EQUITYREGIONEXEURONET FLOAT,
	EQUITYREGIONEMRG FLOAT,
	EQUITYREGIONEMRGNET FLOAT,
	EQUITYREGIONAFRICA FLOAT,
	EQUITYREGIONAFRICANET FLOAT,
	EQUITYREGIONMIDDLEEAST FLOAT,
	EQUITYREGIONMIDDLEEASTNET FLOAT,
	EQUITYREGIONJAPAN FLOAT,
	EQUITYREGIONJAPANNET FLOAT,
	EQUITYREGIONAUSTRALASIA FLOAT,
	EQUITYREGIONAUSTRALASIANET FLOAT,
	EQUITYREGIONDEVELOPED FLOAT,
	EQUITYREGIONDEVELOPEDNET FLOAT,
	EQUITYREGIONEMERG FLOAT,
	EQUITYREGIONEMERGNET FLOAT,
	EQUITYREGIONNOTCLASSIFIED FLOAT,
	EQUITYREGIONNOTCLASSIFIEDNET FLOAT,
	REGIONALEXPOSUREPORTFOLIODATE DATE,
	BONDSECTORSGOVERNMENT FLOAT,
	BONDSECTORSGOVERNMENTNET FLOAT,
	BONDSECTORSMUNICIPAL FLOAT,
	BONDSECTORSMUNICIPALNET FLOAT,
	BONDSECTORSCORPORATE FLOAT,
	BONDSECTORSCORPORATENET FLOAT,
	BONDSECTORSSECURITIZED FLOAT,
	BONDSECTORSSECURITIZEDNET FLOAT,
	BONDSECTORSCASHEQUIVALENTS FLOAT,
	BONDSECTORSCASHEQUIVALENTSNET FLOAT,
	BONDSECTORSDERIVATIVE FLOAT,
	BONDSECTORSDERIVATIVENET FLOAT,
	GLOBALBONDPORTFOLIODATE DATE,
	BONDREGIONUNITEDSTATES FLOAT,
	BONDREGIONUNITEDSTATESNET FLOAT,
	BONDREGIONCANADA FLOAT,
	BONDREGIONCANADANET FLOAT,
	BONDREGIONLATINAMERICA FLOAT,
	BONDREGIONLATINAMERICANET FLOAT,
	BONDREGIONUNITEDKINGDOM FLOAT,
	BONDREGIONUNITEDKINGDOMNET FLOAT,
	BONDREGIONEUROZONE FLOAT,
	BONDREGIONEUROZONENET FLOAT,
	BONDREGIONEXEURO FLOAT,
	BONDREGIONEXEURONET FLOAT,
	BONDREGIONEMRG FLOAT,
	BONDREGIONEMRGNET FLOAT,
	BONDREGIONAFRICA FLOAT,
	BONDREGIONAFRICANET FLOAT,
	BONDREGIONMIDDLEEAST FLOAT,
	BONDREGIONMIDDLEEASTNET FLOAT,
	BONDREGIONJAPAN FLOAT,
	BONDREGIONJAPANNET FLOAT,
	BONDREGIONAUSTRALASIA FLOAT,
	BONDREGIONAUSTRALASIANET FLOAT,
	BONDREGIONDEVELOPED FLOAT,
	BONDREGIONDEVELOPEDNET FLOAT,
	BONDREGIONEMERG FLOAT,
	BONDREGIONEMERGNET FLOAT,
	BONDREGIONNOTCLASSIFIED FLOAT,
	BONDREGIONNOTCLASSIFIEDNET FLOAT,
	BONDREGIONALPORTFOLIODATE DATE,
	BIGINTOFBONDHOLDINGS FLOAT,
	BIGINTOFSTOCKHOLDINGS FLOAT,
	HOLDINGALLOCATIONPORTFOLIODATE DATE,
	KIIDONGOINGCHARGEDATE DATE,
	INDEXID VARCHAR(300),
	INDEXNAME VARCHAR(300),
	SURVEYEDFUNDNETASSETSDATE DATE,
	WEEKRANGELOWDATE DATE,
	WEEKRANGEHIGHDATE DATE,
	MPTRISKFREERATENAME VARCHAR(300),
	RELATIVERISKMEASURESINDEXNAME VARCHAR(300),
	ANNUALREPORTDATE DATE,
	AS_OF_ORIGINAL_REPORTED FLOAT,
	CHECK (`MSTARID` IS NOT NULL),
	CHECK (`BATCH_ID` IS NOT NULL),
	CHECK (`UPDATED_BY` IS NOT NULL)
);


-- BATCH_JOB_EXECUTION definition


-- Drop table


DROP TABLE IF EXISTS BATCH_JOB_EXECUTION;
CREATE TABLE BATCH_JOB_EXECUTION (
	JOB_EXECUTION_ID DECIMAL(19,0),
	VERSION DECIMAL(19,0),
	JOB_INSTANCE_ID DECIMAL(19,0),
	CREATE_TIME DATETIME,
	START_TIME DATETIME DEFAULT NULL,
	END_TIME DATETIME DEFAULT NULL,
	STATUS VARCHAR(10),
	EXIT_CODE VARCHAR(2500),
	EXIT_MESSAGE VARCHAR(2500),
	LAST_UPDATED DATETIME,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500),
	CHECK (`JOB_EXECUTION_ID` IS NOT NULL),
	CHECK (`JOB_INSTANCE_ID` IS NOT NULL),
	CHECK (`CREATE_TIME` IS NOT NULL),
	PRIMARY KEY (JOB_EXECUTION_ID),
	CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID) REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);


-- BATCH_JOB_EXECUTION_CONTEXT definition


-- Drop table


DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT;
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
	JOB_EXECUTION_ID DECIMAL(19,0),
	SHORT_CONTEXT VARCHAR(2500),
	SERIALIZED_CONTEXT LONGTEXT,
	CHECK (`JOB_EXECUTION_ID` IS NOT NULL),
	CHECK (`SHORT_CONTEXT` IS NOT NULL),
	PRIMARY KEY (JOB_EXECUTION_ID),
	CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


-- BATCH_JOB_EXECUTION_PARAMS definition


-- Drop table


DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_PARAMS;
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
	JOB_EXECUTION_ID DECIMAL(19,0),
	TYPE_CD VARCHAR(6),
	KEY_NAME VARCHAR(100),
	STRING_VAL VARCHAR(250),
	DATE_VAL DATETIME DEFAULT NULL,
	LONG_VAL DECIMAL(19,0),
	DOUBLE_VAL BIGINT,
	IDENTIFYING CHAR(1),
	CHECK (`JOB_EXECUTION_ID` IS NOT NULL),
	CHECK (`TYPE_CD` IS NOT NULL),
	CHECK (`KEY_NAME` IS NOT NULL),
	CHECK (`IDENTIFYING` IS NOT NULL),
	CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


-- BATCH_STEP_EXECUTION definition


-- Drop table


DROP TABLE IF EXISTS BATCH_STEP_EXECUTION;
CREATE TABLE BATCH_STEP_EXECUTION (
	STEP_EXECUTION_ID DECIMAL(19,0),
	VERSION DECIMAL(19,0),
	STEP_NAME VARCHAR(100),
	JOB_EXECUTION_ID DECIMAL(19,0),
	START_TIME DATETIME,
	END_TIME DATETIME DEFAULT NULL,
	STATUS VARCHAR(10),
	COMMIT_COUNT DECIMAL(19,0),
	READ_COUNT DECIMAL(19,0),
	FILTER_COUNT DECIMAL(19,0),
	WRITE_COUNT DECIMAL(19,0),
	READ_SKIP_COUNT DECIMAL(19,0),
	WRITE_SKIP_COUNT DECIMAL(19,0),
	PROCESS_SKIP_COUNT DECIMAL(19,0),
	ROLLBACK_COUNT DECIMAL(19,0),
	EXIT_CODE VARCHAR(2500),
	EXIT_MESSAGE VARCHAR(2500),
	LAST_UPDATED DATETIME,
	CHECK (`STEP_EXECUTION_ID` IS NOT NULL),
	CHECK (`VERSION` IS NOT NULL),
	CHECK (`STEP_NAME` IS NOT NULL),
	CHECK (`JOB_EXECUTION_ID` IS NOT NULL),
	CHECK (`START_TIME` IS NOT NULL),
	PRIMARY KEY (STEP_EXECUTION_ID),
	CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


-- BATCH_STEP_EXECUTION_CONTEXT definition


-- Drop table


DROP TABLE IF EXISTS BATCH_STEP_EXECUTION_CONTEXT;
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
	STEP_EXECUTION_ID DECIMAL(19,0),
	SHORT_CONTEXT VARCHAR(2500),
	SERIALIZED_CONTEXT LONGTEXT,
	CHECK (`STEP_EXECUTION_ID` IS NOT NULL),
	CHECK (`SHORT_CONTEXT` IS NOT NULL),
	PRIMARY KEY (STEP_EXECUTION_ID),
	CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID) REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);


-- B_UT_CAT_ASET_ALLOC definition


-- Drop table


DROP TABLE IF EXISTS B_UT_CAT_ASET_ALLOC;
CREATE TABLE B_UT_CAT_ASET_ALLOC (
	PROD_ID DECIMAL(38,0),
	PROD_CDE VARCHAR(30),
	ALLOC_CLASS_TYPE_CDE VARCHAR(10),
	ASET_ALLOC_CLASS_CDE VARCHAR(15),
	FUND_ALLOC_WGHT DECIMAL(19,5),
	FUND_ALLOC_WGHT_IND VARCHAR(7),
	REC_UPDT_DT_TM DATETIME,
	USER_UPDT_NUM VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PROD_ID` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PROD_ID,ALLOC_CLASS_TYPE_CDE,ASET_ALLOC_CLASS_CDE,JOB_BATCH_EXEC_ID),
	CONSTRAINT B_UT_CAT_ASET_ALLOC_FK01 FOREIGN KEY (PROD_ID,JOB_BATCH_EXEC_ID) REFERENCES B_UT_PROD(PROD_ID,JOB_BATCH_EXEC_ID)
);


-- B_UT_HLDG definition


-- Drop table


DROP TABLE IF EXISTS B_UT_HLDG;
CREATE TABLE B_UT_HLDG (
	PERFORMANCE_ID VARCHAR(10),
	HLDG_NAME VARCHAR(100),
	WGHT_HLDG_PCT DECIMAL(9,5),
	USER_UPDT_NUM VARCHAR(20),
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	SER_NUM DECIMAL(38,0),
	REC_UPDT_DT_TM DATETIME,
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`HLDG_NAME` IS NOT NULL),
	CHECK (`USER_UPDT_NUM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	CHECK (`SER_NUM` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	PRIMARY KEY (PERFORMANCE_ID,HLDG_NAME,JOB_BATCH_EXEC_ID,SER_NUM),
	CONSTRAINT B_UT_HLDG_FK01 FOREIGN KEY (PERFORMANCE_ID,JOB_BATCH_EXEC_ID) REFERENCES B_UT_INSTM(PERFORMANCE_ID,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_BUH_JOB_BATCH_EXEC_ID ON B_UT_HLDG (JOB_BATCH_EXEC_ID);
CREATE INDEX INX_ON_BUH_PERFORMANCE_ID ON B_UT_HLDG (PERFORMANCE_ID);


-- B_UT_RETURNS definition


-- Drop table


DROP TABLE IF EXISTS B_UT_RETURNS;
CREATE TABLE B_UT_RETURNS (
	PERFORMANCE_ID VARCHAR(10),
	FUND_RETURN_TYPE_CODE VARCHAR(5),
	RTRN_AMT DECIMAL(19,5),
	REC_UPDT_DT_TM DATETIME,
	JOB_BATCH_EXEC_ID DECIMAL(38,0),
	CHECK (`PERFORMANCE_ID` IS NOT NULL),
	CHECK (`FUND_RETURN_TYPE_CODE` IS NOT NULL),
	CHECK (`REC_UPDT_DT_TM` IS NOT NULL),
	CHECK (`JOB_BATCH_EXEC_ID` IS NOT NULL),
	PRIMARY KEY (PERFORMANCE_ID,FUND_RETURN_TYPE_CODE,JOB_BATCH_EXEC_ID),
	CONSTRAINT B_UT_RETURNS_FK01 FOREIGN KEY (PERFORMANCE_ID,JOB_BATCH_EXEC_ID) REFERENCES B_UT_INSTM(PERFORMANCE_ID,JOB_BATCH_EXEC_ID)
);
CREATE INDEX INX_ON_BUR_JOB_BATCH_EXEC_ID ON B_UT_RETURNS (JOB_BATCH_EXEC_ID);

-- 恢复外键检查
SET SESSION foreign_key_checks = 1;

-- DDL 导入完成
