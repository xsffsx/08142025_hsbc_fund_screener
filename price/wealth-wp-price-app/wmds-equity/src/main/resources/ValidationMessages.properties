# constant
constant.notEmpty=should not be empty
constant.notNull=should not be null
constant.regEx=only support
# site
SupportSite=Can't support site
# header
validator.notEmpty.header.countryCode.message=X-hhhh-Chnl-CountryCode {constant.notEmpty}
validator.notEmpty.header.groupMember.message=X-hhhh-Chnl-Group-Member {constant.notEmpty}
validator.notEmpty.header.channelId.message=X-hhhh-Channel-Id {constant.notEmpty}
validator.regex.header.channelId.message=X-hhhh-Channel-Id {constant.regEx}
validator.notEmpty.header.locale.message=X-hhhh-Locale {constant.notEmpty}
validator.regex.header.locale.message=X-hhhh-Locale {constant.regEx}
validator.notEmpty.header.appCode.message=X-hhhh-App-Code {constant.notEmpty}
validator.regex.header.appCode.message=X-hhhh-App-Code {constant.regEx}
# quotes
# request
validator.notEmpty.quotesRequest.productKeys.message=productKeys {constant.notEmpty}
validator.notEmpty.quotesRequest.symbol.message=symbol {constant.notEmpty}
validator.notEmpty.quotesRequest.market.message=market {constant.notEmpty}
validator.regex.quotesRequest.market.message=market {constant.regEx}
validator.notNull.quotesRequest.delay.message=delay {constant.notNull}
validator.regex.quotesRequest.delay.message = delay {constant.regEx}
validator.notEmpty.quotesRequest.productKey.prodCdeAltClassCde.message=productKey[prodCdeAltClassCde] {constant.notEmpty}
validator.regex.quotesRequest.productKey.prodCdeAltClassCde.message=productKey[prodCdeAltClassCde] {constant.regEx}
validator.notEmpty.quotesRequest.productKey.prodAltNum.message=productKey[prodAltNum] {constant.notEmpty}
validator.notEmpty.quotesRequest.productKey.productType.message=productKey[productType] {constant.notEmpty}
validator.regex.quotesRequest.productKey.productType.message=productKey[productType] {constant.regEx}


# response
validator.notNull.quotesResponse.quotesPriceQuote.prodAltNumSegs.message=quotesPriceQuote[prodAltNumSegs] {constant.notNull}
validator.notEmpty.quotesResponse.quotesPriceQuote.prodAltNumSeg.prodCdeAltClassCde=quotesPriceQuote[prodAltNumSegs[prodCdeAltClassCde]] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.prodAltNumSeg.prodAltNum=quotesPriceQuote[prodAltNumSegs[prodAltNum]] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.symbol.message=quotesPriceQuote[symbol] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.market.message=quotesPriceQuote[market] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.exchangeCode.message=quotesPriceQuote[exchangeCode] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.productType.message=quotesPriceQuote[productType] {constant.notEmpty}
validator.notEmpty.quotesResponse.quotesPriceQuote.companyName.message=quotesPriceQuote[companyName] {constant.notEmpty}
validator.notNull.quotesResponse.quotesPriceQuote.nominalPrice.message=quotesPriceQuote[nominalPrice] {constant.notNull}
validator.notEmpty.quotesResponse.quotesPriceQuote.currency.message=quotesPriceQuote[currency] {constant.notEmpty}
validator.notNull.quotesResponse.quotesPriceQuote.delay.message=quotesPriceQuote[delay] {constant.notNull}
# same sector
# request
validator.notEmpty.sameSectorRequest.prodCdeAltClassCde.message=prodCdeAltClassCde {constant.notEmpty}
validator.regex.sameSectorRequest.prodCdeAltClassCde.message=prodCdeAltClassCde {constant.regEx}
validator.notEmpty.sameSectorRequest.prodAltNum.message=prodAltNum {constant.notEmpty}
validator.notEmpty.sameSectorRequest.productType.message=productType {constant.notEmpty}
validator.regex.sameSectorRequest.productType.message=productType {constant.regEx}
validator.notEmpty.sameSectorRequest.market.message=market {constant.notEmpty}
validator.regex.sameSectorRequest.market.message=market {constant.regEx}
validator.notNull.sameSectorRequest.delay.message=delay {constant.notNull}
validator.min.sameSectorRequest.number.message=number must greater than 1
# response
validator.notEmpty.sameSectorResponse.sameSectorPriceQuote.ric.message=sameSectorPriceQuote[ric] {constant.notEmpty}
validator.notEmpty.sameSectorResponse.sameSectorPriceQuote.symbol.message=sameSectorPriceQuote[symbol] {constant.notEmpty}
validator.notEmpty.sameSectorResponse.sameSectorPriceQuote.market.message=sameSectorPriceQuote[market] {constant.notEmpty}
validator.notEmpty.sameSectorResponse.sameSectorPriceQuote.exchangeCode.message=sameSectorPriceQuote[exchangeCode] {constant.notEmpty}
validator.notNull.sameSectorResponse.sameSectorPriceQuote.delay.message=sameSectorPriceQuote[delay] {constant.notNull}
# news
# request
validator.notEmpty.trisNewsDetailRequest.market.message=market {constant.notEmpty}
validator.notEmpty.trisNewsDetailRequest.id.message=id {constant.notEmpty}
validator.notEmpty.trisNewsDetailRequest.source.message=source {constant.notEmpty}
validator.notEmpty.trisNewsHeadlinesRequest.market.message=source {constant.notEmpty}
validator.notEmpty.trisNewsHeadlinesRequest.category.message=source {constant.notEmpty}
# top mover
# request
validator.notEmpty.topmoverRequest.market.message=market {constant.notEmpty}
validator.notEmpty.topmoverRequest.productType.message=productType {constant.notEmpty}
validator.regex.topmoverRequest.market.message=market {constant.regEx}
validator.regex.topmoverRequest.productType.message=productType {constant.regEx}


#chart
#request
validator.arrayCheck.chartRequest.items.message=items {constant.array}
validator.notEmpty.chartRequest.intType.message=intType {constant.notEmpty}
validator.regex.chartRequest.intType.message=intType {constant.regEx}
validator.regex.chartRequest.intCnt.message=intCnt {constant.regEx}
validator.dateFormatCheck.chartRequest.startTime.message=startTm {constant.dateFormat}
validator.dateFormatCheck.chartRequest.endTime.message=endTm {constant.dateFormat}

#ipo
#request
validator.notEmpty.ipoRequest.market.message=market {constant.notEmpty}
validator.regex.ipoRequest.market.message=market {constant.regEx}